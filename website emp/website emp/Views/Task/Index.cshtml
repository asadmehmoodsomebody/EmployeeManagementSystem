@model Pagination<website_emp.Models.Task>

@{
    ViewBag.Title = "Index";
    int rowcount = 1 + ((Model.PageNumber - 1) * 10);
}



<link href="~/CustomCSS/Task.css" rel="stylesheet"/>

<div class="pt-2 px-3">


    <div class="row no-gutters w-100 py-2">
        <div class="col-6">
            <form action="index" method="get" class="">
                <input type="search" value="@ViewData["search"]" class="form-control d-inline-block shadow-none rounded-0 w-50" name="search" placeholder="Search by task,project"/>
                <button class="btn btn-secondary shadow-none rounded-0 ml-2">Search</button>
            </form>
        </div>
        <div class="col-6 d-flex justify-content-end">
            @if (User.IsInRole("Admin"))
            {
                <div class="btn btn-primary rounded-0 shadow-none">Add Task</div>
            }
            
        </div>
    </div>
    <div class="row main-div-task no-gutters w-100 bg-light">
        <div class="table-row w-100">
            <table class="table-custom-task" >
                <tr class="bg-primary text-light">
                    <th>#</th>
                    <th>Project</th>
                    <th>Task</th>
                    <th>Assigned to</th>
                    <th>Assigned by</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
                @foreach (var item in Model)
                {
                    <tr class="bg-white shadow">
                        <td>@rowcount</td>
                        <td><a href="@Url.Action("ProjectDetail","Project",new { projectid= item.ProjectId})">@item.project.ProjectTitle</a></td>
                        <td><a href="@Url.Action("TaskDetail","Task",new { taskid= item.TaskId})">@item.TaskTitle</a></td>
                        <td>@item.assingedto.FirstName</td>
                        <td>@item.assingedby.FirstName</td>
                        <td>@item.Status</td>
                        <td>
                            <a class="btn btn-warning p-1 rounded-0 shadow-none" href="@Url.Action("EditTask","Task",new { taskid= item.TaskId})">Edit</a>
                            <a class="btn btn-danger p-1 rounded-0 shadow-none" href="@Url.Action("DeleteTask","Task",new { taskid= item.TaskId})">Delete</a>
                        </td>
                    </tr>
                    rowcount++;
                }
                @*<script>
                for (let i = 0 ; i < 10 ; i++)
                {
                    document.write(
                        `<tr class="bg-white">
                <td>${i+1}</td>
                <td>Project</td>
                <td>Task</td>
                <td>Assigned to</td>
                <td>Assigned by</td>
                <td>Status</td>
                <td>Action</td>
            </tr>`)
                }
                </script>*@
            </table>
        </div>
        
        <div class="row no-gutters w-100">
            <div class="col-12 col-md-6 d-flex align-items-center justify-content-center justify-content-md-start pl-0 pl-md-2">
                <p class="text-justify">
                    page <span id="start-number">@Model.PageNumber</span>&nbsp;of <span id="total-pages">@Model.TotalPages</span>
                </p>
            </div>
            <div class="col-12 col-md-6 d-flex justify-content-center justify-content-md-end align-items-center pr-0 pr-md-2">
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        @if (!Model.HasPrevious)
                        {
                            <li class="page-item disabled"><a class="page-link disabled" href="#">Previous</a></li>
                        }
                        else
                        {
                            <li class="page-item "><a class="page-link" href="@Url.Action("Index", "Task", new { search = ViewData["search"], pagenumber = Model.PageNumber - 1 })">Previous</a></li>
                        }
                        @{
                            int i = 1;
                            if (Model.PageNumber - 2 > 1)
                            {
                                i = Model.PageNumber - 2;
                            }
                            for (; i <= (Model.PageNumber + 2) && i <= Model.TotalPages; i++)
                            {
                                <li class="page-item"><a class="page-link" href="@Url.Action("Index","Task",new { search =ViewData["search"],pagenumber=i})">@i</a></li>
                            }
                        }

                        @*<li class="page-item"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>*@
                        @if (!Model.HasNext)
                        {
                            <li class="page-item disabled"><a class="page-link disabled" href="@Url.Action("Index","Task",new { search =ViewData["search"],pagenumber=ViewData["pagenumber"]})">Next</a></li>
                        }
                        else
                        {
                            <li class="page-item "><a class="page-link" href="@Url.Action("Index","Task",new { search =ViewData["search"],pagenumber=Model.PageNumber+1})">Next</a></li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>
